import{_ as o,r as l,o as r,c,a as e,d as n,w as t,b as s,e as p}from"./app-UtSJ3GIW.js";const i={},d=e("h1",{id:"functions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),s(" Functions")],-1),u=e("p",null,"This section outlines all the builtin functions in the Blizzard Programming Language. Examples are provided for the functions, and their outputs are in the code block beneath them.",-1),h={class:"table-of-contents"},D=p(`<h2 id="io" tabindex="-1"><a class="header-anchor" href="#io" aria-hidden="true">#</a> IO</h2><h3 id="write" tabindex="-1"><a class="header-anchor" href="#write" aria-hidden="true">#</a> <code>WRITE</code></h3><p>The <code>WRITE</code> function outputs the string representation of its parameters to the terminal executing the program. Separating parameters with <code>,</code> will output the string representations of each parameter separated by a space.</p><div class="language-bzz" data-ext="bzz"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">WRITE</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">123</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#DCDCAA;">WRITE</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Hello&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;John, it is a&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;sunny day out.&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre></div><blockquote><div class="language-text" data-ext="text"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">123Hello John, it is a sunny day out.</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre></div></blockquote><h3 id="writeln" tabindex="-1"><a class="header-anchor" href="#writeln" aria-hidden="true">#</a> <code>WRITELN</code></h3><p>The <code>WRITELN</code> function outputs the string representation of its parameters to the terminal executing the program, followed by the operating system&#39;s native line terminator (a new line). Separating parameters with <code>,</code> will output the string representation of each parameter separated by a space.</p><div class="language-bzz" data-ext="bzz"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">WRITELN</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">123</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#DCDCAA;">WRITELN</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;Hello&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;John, it is a&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&quot;sunny day out.&quot;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre></div><blockquote><div class="language-text" data-ext="text"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">123</span></span>
<span class="line"><span style="color:#D4D4D4;">Hello John, it is a sunny day out.</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre></div><p>Note the new line at the end of <em>both</em> <code>WRITELN</code> statements.</p></blockquote>`,9);function y(E,f){const a=l("router-link");return r(),c("div",null,[d,u,e("nav",h,[e("ul",null,[e("li",null,[n(a,{to:"#io"},{default:t(()=>[s("IO")]),_:1}),e("ul",null,[e("li",null,[n(a,{to:"#write"},{default:t(()=>[s("WRITE")]),_:1})]),e("li",null,[n(a,{to:"#writeln"},{default:t(()=>[s("WRITELN")]),_:1})])])])])]),D])}const g=o(i,[["render",y],["__file","functions.html.vue"]]);export{g as default};
